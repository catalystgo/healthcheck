// Code generated by MockGen. DO NOT EDIT.
// Source: ./handler_test.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockErrorHanlder is a mock of errorHandler interface.
type MockErrorHanlder struct {
	ctrl     *gomock.Controller
	recorder *MockErrorHanlderMockRecorder
}

// MockErrorHanlderMockRecorder is the mock recorder for MockErrorHanlder.
type MockErrorHanlderMockRecorder struct {
	mock *MockErrorHanlder
}

// NewMockErrorHanlder creates a new mock instance.
func NewMockErrorHanlder(ctrl *gomock.Controller) *MockErrorHanlder {
	mock := &MockErrorHanlder{ctrl: ctrl}
	mock.recorder = &MockErrorHanlderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockErrorHanlder) EXPECT() *MockErrorHanlderMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockErrorHanlder) Handle(arg0 string, arg1 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handle", arg0, arg1)
}

// Handle indicates an expected call of Handle.
func (mr *MockErrorHanlderMockRecorder) Handle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockErrorHanlder)(nil).Handle), arg0, arg1)
}
